class Solution:
    def shipWithinDays(self, weights: List[int], D: int) -> int:
        def canship(capacity): 
            days_needed = 1
            cur_weights = 0 
            
            for w in weights: 
                cur_weights += w
                
            
                if cur_weights > capacity: 
                    days_needed += 1
                    cur_weights = w
                
            return days_needed <= D
        
        left = max(weights) 
        right = sum(weights) 
        
        while left < right: 
            
            mid = left + (right - left) // 2
            
            if canship(mid): 
                right = mid 
            
            else : 
                left = mid + 1
        
        return right 
